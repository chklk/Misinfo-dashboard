{"ast":null,"code":"import _toConsumableArray from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jiayiliu/Desktop/twitter-feed/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jiayiliu/Desktop/twitter-feed/src/App.js\";\nimport React, { Component } from 'react';\nimport { TweetBody, MatchingPosts, TweetBox } from './components/tweet.js';\nimport { PullToRefresh, PullDownContent, ReleaseContent, RefreshContent } from \"react-js-pull-to-refresh\";\nimport './App.css';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      users: []\n    };\n    _this.handleRefresh = _this.handleRefresh.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getUser = _this.getUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleRefresh\",\n    value: function handleRefresh() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.getUser();\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getUser();\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser() {\n      var _this3 = this;\n\n      fetch('https://randomuser.me/api/?results=100').then(function (response) {\n        if (response.ok) return response.json();\n        throw new Error('Request failed.');\n      }).then(function (data) {\n        _this3.setState({\n          users: [{\n            name: data.results[0].name,\n            image: data.results[0].picture.medium,\n            tweet: data.results[0].email,\n            city: data.results[0].phone\n          }].concat(_toConsumableArray(_this3.state.users))\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(InfiniteScroll, {\n        dataLength: 20,\n        next: this.handleRefresh,\n        hasMore: true,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, _toConsumableArray(this.state.users).map(function (user, index) {\n        var name = \"\".concat(user.name.first, \" \").concat(user.name.last);\n        var handle = \"@\".concat(user.name.first).concat(user.name.last);\n        var profilepic = user.image;\n        var tweet = user.tweet;\n        var city = user.city;\n        return React.createElement(TweetBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(TweetBody, {\n          key: index,\n          name: name,\n          handle: handle,\n          handle_2: \"2\",\n          tweet: tweet,\n          profilepic: profilepic,\n          city: city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(MatchingPosts, {\n          key: index,\n          profilepic: profilepic,\n          handle: handle,\n          tweet: tweet,\n          image: profilepic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }))));\n      })), React.createElement(\"div\", {\n        className: \"main-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, _toConsumableArray(this.state.users).map(function (user, index) {\n        var name = \"\".concat(user.name.first, \" \").concat(user.name.last);\n        var handle = \"@\".concat(user.name.first).concat(user.name.last);\n        var profilepic = user.image;\n        var tweet = user.tweet;\n        var city = user.city;\n        return React.createElement(TweetBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(TweetBody, {\n          key: index,\n          name: name,\n          handle: handle,\n          handle_2: \"2\",\n          tweet: tweet,\n          profilepic: profilepic,\n          city: city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(MatchingPosts, {\n          key: index,\n          profilepic: profilepic,\n          handle: handle,\n          tweet: tweet,\n          image: profilepic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jiayiliu/Desktop/twitter-feed/src/App.js"],"names":["React","Component","TweetBody","MatchingPosts","TweetBox","PullToRefresh","PullDownContent","ReleaseContent","RefreshContent","InfiniteScroll","App","props","state","users","handleRefresh","bind","getUser","Promise","resolve","fetch","then","response","ok","json","Error","data","setState","name","results","image","picture","medium","tweet","email","city","phone","catch","error","console","log","map","user","index","first","last","handle","profilepic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TweetBody,MatchingPosts,TweetBox } from './components/tweet.js'\nimport {PullToRefresh, PullDownContent, ReleaseContent, RefreshContent} from \"react-js-pull-to-refresh\";\nimport './App.css';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      users:\n      [ \n      ]\n    }\n    this.handleRefresh = this.handleRefresh.bind(this)\n    this.getUser = this.getUser.bind(this)\n  }\n\n  handleRefresh() {\n    return new Promise((resolve) => {\n      this.getUser()\n    });\n  }\n\n  componentWillMount() {\n    this.getUser()\n  }\n\n  getUser() {\n    fetch('https://randomuser.me/api/?results=100')\n    .then(response => {\n      if(response.ok) return response.json();\n      throw new Error('Request failed.');\n    })\n    .then(data => {\n      this.setState({\n        users:[\n          {\n            name: data.results[0].name,\n            image: data.results[0].picture.medium,\n            tweet: data.results[0].email,\n            city: data.results[0].phone\n          },\n          ...this.state.users,\n        ]\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n \n      <div>\n        <InfiniteScroll\n          dataLength={20}\n          next={this.handleRefresh}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n      <div className=\"main-body\">\n        {[...this.state.users].map((user, index) => {\n          let name = `${user.name.first} ${user.name.last}`\n          let handle = `@${user.name.first}${user.name.last}`\n          let profilepic = user.image\n          let tweet = user.tweet\n          let city = user.city\n          return(\n            <TweetBox>\n          <div>\n            <TweetBody \n              key={index}\n              name={name}\n              handle={handle}\n              handle_2='2'\n              tweet={tweet}\n              profilepic={profilepic} \n              city={city}\n              />\n              <div>\n              <MatchingPosts\n              key={index}\n              profilepic={profilepic}\n              handle={handle}\n              tweet={tweet}\n              image={profilepic}\n              /> \n              </div>\n          </div>\n          </TweetBox>\n          )\n        })}      \n      </div>\n      <div className=\"main-body\">\n        \n          {[...this.state.users].map((user, index) => {\n          let name = `${user.name.first} ${user.name.last}`\n          let handle = `@${user.name.first}${user.name.last}`\n          let profilepic = user.image\n          let tweet = user.tweet\n          let city = user.city\n          return(\n            <TweetBox>\n          <div>\n            <TweetBody \n              key={index}\n              name={name}\n              handle={handle}\n              handle_2='2'\n              tweet={tweet}\n              profilepic={profilepic} \n              city={city}\n              />\n              <div>\n              <MatchingPosts\n              key={index}\n              profilepic={profilepic}\n              handle={handle}\n              tweet={tweet}\n              image={profilepic}\n              /> \n              </div>\n          </div>\n          </TweetBox>\n          )\n        })}    \n        \n      </div>\n      </InfiniteScroll>\n    </div>\n    );\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}