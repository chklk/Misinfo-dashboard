{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PullToRefresh =\n/** @class */\nfunction (_super) {\n  __extends(PullToRefresh, _super);\n\n  function PullToRefresh(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.dragging = false;\n    _this.startY = 0;\n    _this.currentY = 0;\n    _this.state = {\n      pullToRefreshThresholdBreached: false,\n      maxPullDownDistance: 0,\n      onRefreshing: false\n    };\n    _this.containerRef = _this.containerRef.bind(_this);\n    _this.pullDownRef = _this.pullDownRef.bind(_this);\n    _this.onTouchStart = _this.onTouchStart.bind(_this);\n    _this.onTouchMove = _this.onTouchMove.bind(_this);\n    _this.onEnd = _this.onEnd.bind(_this);\n    return _this;\n  }\n\n  PullToRefresh.prototype.containerRef = function (container) {\n    this.container = container;\n  };\n\n  PullToRefresh.prototype.pullDownRef = function (pullDown) {\n    this.pullDown = pullDown;\n    var maxPullDownDistance = this.pullDown && this.pullDown.firstChild && this.pullDown.firstChild[\"getBoundingClientRect\"] ? this.pullDown.firstChild[\"getBoundingClientRect\"]().height : 0;\n    this.setState({\n      maxPullDownDistance: maxPullDownDistance\n    });\n  };\n\n  PullToRefresh.prototype.componentDidMount = function () {\n    if (!this.container) {\n      return;\n    }\n\n    this.container.addEventListener(\"touchstart\", this.onTouchStart);\n    this.container.addEventListener(\"touchmove\", this.onTouchMove);\n    this.container.addEventListener(\"touchend\", this.onEnd);\n    this.container.addEventListener(\"mousedown\", this.onTouchStart);\n    this.container.addEventListener(\"mousemove\", this.onTouchMove);\n    this.container.addEventListener(\"mouseup\", this.onEnd);\n  };\n\n  PullToRefresh.prototype.componentWillUnmount = function () {\n    if (!this.container) {\n      return;\n    }\n\n    this.container.removeEventListener(\"touchstart\", this.onTouchStart);\n    this.container.removeEventListener(\"touchmove\", this.onTouchMove);\n    this.container.removeEventListener(\"touchend\", this.onEnd);\n    this.container.removeEventListener(\"mousedown\", this.onTouchStart);\n    this.container.removeEventListener(\"mousemove\", this.onTouchMove);\n    this.container.removeEventListener(\"mouseup\", this.onEnd);\n  };\n\n  PullToRefresh.prototype.onTouchStart = function (e) {\n    var _a = this.props.triggerHeight,\n        triggerHeight = _a === void 0 ? 40 : _a;\n    this.startY = e[\"pageY\"] || e.touches[0].pageY;\n    this.currentY = this.startY;\n    var top = this.container.getBoundingClientRect().top || this.container.getBoundingClientRect().y || 0;\n\n    if (this.startY - top > triggerHeight) {\n      return;\n    }\n\n    this.dragging = true;\n    this.container.style.transition = \"transform 0.2s cubic-bezier(0,0,0.31,1)\";\n    this.pullDown.style.transition = \"transform 0.2s cubic-bezier(0,0,0.31,1)\";\n  };\n\n  PullToRefresh.prototype.onTouchMove = function (e) {\n    if (!this.dragging) {\n      return;\n    }\n\n    this.currentY = e[\"pageY\"] || e.touches[0].pageY;\n\n    if (this.currentY < this.startY) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (this.currentY - this.startY >= this.props.pullDownThreshold) {\n      this.setState({\n        pullToRefreshThresholdBreached: true\n      });\n    }\n\n    if (this.currentY - this.startY > this.state.maxPullDownDistance) {\n      return;\n    }\n\n    this.container.style.overflow = \"visible\";\n    this.container.style.transform = \"translate(0px, \" + (this.currentY - this.startY) + \"px)\";\n  };\n\n  PullToRefresh.prototype.onEnd = function () {\n    var _this = this;\n\n    this.dragging = false;\n    this.startY = 0;\n    this.currentY = 0;\n\n    if (!this.state.pullToRefreshThresholdBreached) {\n      this.initContainer();\n      return;\n    }\n\n    this.container.style.overflow = \"visible\";\n    this.container.style.transform = \"translate(0px, \" + this.props.pullDownThreshold + \"px)\";\n    this.setState({\n      onRefreshing: true\n    }, function () {\n      _this.props.onRefresh().then(function () {\n        _this.initContainer();\n\n        setTimeout(function () {\n          _this.setState({\n            onRefreshing: false,\n            pullToRefreshThresholdBreached: false\n          });\n        }, 200);\n      });\n    });\n  };\n\n  PullToRefresh.prototype.initContainer = function () {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      if (_this.container) {\n        _this.container.style.overflow = \"auto\";\n        _this.container.style.transform = \"none\";\n      }\n    });\n  };\n\n  PullToRefresh.prototype.renderPullDownContent = function () {\n    var _a = this.props,\n        releaseContent = _a.releaseContent,\n        pullDownContent = _a.pullDownContent,\n        refreshContent = _a.refreshContent;\n    var _b = this.state,\n        onRefreshing = _b.onRefreshing,\n        pullToRefreshThresholdBreached = _b.pullToRefreshThresholdBreached;\n    var content = onRefreshing ? refreshContent : pullToRefreshThresholdBreached ? releaseContent : pullDownContent;\n    var contentStyle = {\n      position: \"absolute\",\n      overflow: \"hidden\",\n      left: 0,\n      right: 0,\n      top: 0\n    };\n    return React.createElement(\"div\", {\n      style: contentStyle,\n      ref: this.pullDownRef\n    }, content);\n  };\n\n  PullToRefresh.prototype.render = function () {\n    var backgroundColor = this.props.backgroundColor;\n    var containerStyle = {\n      height: \"auto\",\n      overflow: \"hidden\",\n      WebkitOverflowScrolling: \"touch\",\n      position: \"relative\",\n      zIndex: 1\n    };\n\n    if (backgroundColor) {\n      containerStyle.backgroundColor = backgroundColor;\n    }\n\n    return React.createElement(\"div\", {\n      style: containerStyle\n    }, this.renderPullDownContent(), React.createElement(\"div\", {\n      ref: this.containerRef,\n      style: containerStyle\n    }, this.props.children));\n  };\n\n  return PullToRefresh;\n}(React.Component);\n\nexports.PullToRefresh = PullToRefresh;","map":null,"metadata":{},"sourceType":"script"}